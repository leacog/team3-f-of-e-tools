$date
	Tue Jun  8 02:50:40 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 32 ! out [31:0] $end
$var reg 32 " addr [31:0] $end
$var reg 1 # clk $end
$scope module insmem $end
$var wire 32 $ addr [31:0] $end
$var wire 1 # clk $end
$var wire 32 % out [31:0] $end
$scope module mem_cell_1 $end
$var wire 10 & RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 ' RCLKE $end
$var wire 1 ( RE $end
$var wire 10 ) WADDR [9:0] $end
$var wire 1 * WCLK $end
$var wire 1 + WCLKE $end
$var wire 4 , WDATA [3:0] $end
$var wire 1 - WE $end
$var wire 16 . _1_ [15:0] $end
$var wire 16 / _0_ [15:0] $end
$var wire 4 0 RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 1 MASK [15:0] $end
$var wire 11 2 RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 ' RCLKE $end
$var wire 1 ( RE $end
$var wire 11 3 WADDR [10:0] $end
$var wire 1 * WCLK $end
$var wire 1 + WCLKE $end
$var wire 16 4 WDATA [15:0] $end
$var wire 1 - WE $end
$var wire 16 5 WMASK_I [15:0] $end
$var wire 16 6 WDATA_I [15:0] $end
$var wire 16 7 RMASK_I [15:0] $end
$var wire 16 8 RDATA [15:0] $end
$var reg 16 9 RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_cell_2 $end
$var wire 10 : RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 ; RCLKE $end
$var wire 1 < RE $end
$var wire 10 = WADDR [9:0] $end
$var wire 1 > WCLK $end
$var wire 1 ? WCLKE $end
$var wire 4 @ WDATA [3:0] $end
$var wire 1 A WE $end
$var wire 16 B _1_ [15:0] $end
$var wire 16 C _0_ [15:0] $end
$var wire 4 D RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 E MASK [15:0] $end
$var wire 11 F RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 ; RCLKE $end
$var wire 1 < RE $end
$var wire 11 G WADDR [10:0] $end
$var wire 1 > WCLK $end
$var wire 1 ? WCLKE $end
$var wire 16 H WDATA [15:0] $end
$var wire 1 A WE $end
$var wire 16 I WMASK_I [15:0] $end
$var wire 16 J WDATA_I [15:0] $end
$var wire 16 K RMASK_I [15:0] $end
$var wire 16 L RDATA [15:0] $end
$var reg 16 M RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_cell_3 $end
$var wire 10 N RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 O RCLKE $end
$var wire 1 P RE $end
$var wire 10 Q WADDR [9:0] $end
$var wire 1 R WCLK $end
$var wire 1 S WCLKE $end
$var wire 4 T WDATA [3:0] $end
$var wire 1 U WE $end
$var wire 16 V _1_ [15:0] $end
$var wire 16 W _0_ [15:0] $end
$var wire 4 X RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 Y MASK [15:0] $end
$var wire 11 Z RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 O RCLKE $end
$var wire 1 P RE $end
$var wire 11 [ WADDR [10:0] $end
$var wire 1 R WCLK $end
$var wire 1 S WCLKE $end
$var wire 16 \ WDATA [15:0] $end
$var wire 1 U WE $end
$var wire 16 ] WMASK_I [15:0] $end
$var wire 16 ^ WDATA_I [15:0] $end
$var wire 16 _ RMASK_I [15:0] $end
$var wire 16 ` RDATA [15:0] $end
$var reg 16 a RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_cell_4 $end
$var wire 10 b RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 c RCLKE $end
$var wire 1 d RE $end
$var wire 10 e WADDR [9:0] $end
$var wire 1 f WCLK $end
$var wire 1 g WCLKE $end
$var wire 4 h WDATA [3:0] $end
$var wire 1 i WE $end
$var wire 16 j _1_ [15:0] $end
$var wire 16 k _0_ [15:0] $end
$var wire 4 l RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 m MASK [15:0] $end
$var wire 11 n RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 c RCLKE $end
$var wire 1 d RE $end
$var wire 11 o WADDR [10:0] $end
$var wire 1 f WCLK $end
$var wire 1 g WCLKE $end
$var wire 16 p WDATA [15:0] $end
$var wire 1 i WE $end
$var wire 16 q WMASK_I [15:0] $end
$var wire 16 r WDATA_I [15:0] $end
$var wire 16 s RMASK_I [15:0] $end
$var wire 16 t RDATA [15:0] $end
$var reg 16 u RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_cell_5 $end
$var wire 10 v RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 w RCLKE $end
$var wire 1 x RE $end
$var wire 10 y WADDR [9:0] $end
$var wire 1 z WCLK $end
$var wire 1 { WCLKE $end
$var wire 4 | WDATA [3:0] $end
$var wire 1 } WE $end
$var wire 16 ~ _1_ [15:0] $end
$var wire 16 !" _0_ [15:0] $end
$var wire 4 "" RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 #" MASK [15:0] $end
$var wire 11 $" RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 w RCLKE $end
$var wire 1 x RE $end
$var wire 11 %" WADDR [10:0] $end
$var wire 1 z WCLK $end
$var wire 1 { WCLKE $end
$var wire 16 &" WDATA [15:0] $end
$var wire 1 } WE $end
$var wire 16 '" WMASK_I [15:0] $end
$var wire 16 (" WDATA_I [15:0] $end
$var wire 16 )" RMASK_I [15:0] $end
$var wire 16 *" RDATA [15:0] $end
$var reg 16 +" RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_cell_6 $end
$var wire 10 ," RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 -" RCLKE $end
$var wire 1 ." RE $end
$var wire 10 /" WADDR [9:0] $end
$var wire 1 0" WCLK $end
$var wire 1 1" WCLKE $end
$var wire 4 2" WDATA [3:0] $end
$var wire 1 3" WE $end
$var wire 16 4" _1_ [15:0] $end
$var wire 16 5" _0_ [15:0] $end
$var wire 4 6" RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 7" MASK [15:0] $end
$var wire 11 8" RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 -" RCLKE $end
$var wire 1 ." RE $end
$var wire 11 9" WADDR [10:0] $end
$var wire 1 0" WCLK $end
$var wire 1 1" WCLKE $end
$var wire 16 :" WDATA [15:0] $end
$var wire 1 3" WE $end
$var wire 16 ;" WMASK_I [15:0] $end
$var wire 16 <" WDATA_I [15:0] $end
$var wire 16 =" RMASK_I [15:0] $end
$var wire 16 >" RDATA [15:0] $end
$var reg 16 ?" RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_cell_7 $end
$var wire 10 @" RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 A" RCLKE $end
$var wire 1 B" RE $end
$var wire 10 C" WADDR [9:0] $end
$var wire 1 D" WCLK $end
$var wire 1 E" WCLKE $end
$var wire 4 F" WDATA [3:0] $end
$var wire 1 G" WE $end
$var wire 16 H" _1_ [15:0] $end
$var wire 16 I" _0_ [15:0] $end
$var wire 4 J" RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 K" MASK [15:0] $end
$var wire 11 L" RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 A" RCLKE $end
$var wire 1 B" RE $end
$var wire 11 M" WADDR [10:0] $end
$var wire 1 D" WCLK $end
$var wire 1 E" WCLKE $end
$var wire 16 N" WDATA [15:0] $end
$var wire 1 G" WE $end
$var wire 16 O" WMASK_I [15:0] $end
$var wire 16 P" WDATA_I [15:0] $end
$var wire 16 Q" RMASK_I [15:0] $end
$var wire 16 R" RDATA [15:0] $end
$var reg 16 S" RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_cell_8 $end
$var wire 10 T" RADDR [9:0] $end
$var wire 1 # RCLK $end
$var wire 1 U" RCLKE $end
$var wire 1 V" RE $end
$var wire 10 W" WADDR [9:0] $end
$var wire 1 X" WCLK $end
$var wire 1 Y" WCLKE $end
$var wire 4 Z" WDATA [3:0] $end
$var wire 1 [" WE $end
$var wire 16 \" _1_ [15:0] $end
$var wire 16 ]" _0_ [15:0] $end
$var wire 4 ^" RDATA [3:0] $end
$scope module ram40_4kinst_physical $end
$var wire 16 _" MASK [15:0] $end
$var wire 11 `" RADDR [10:0] $end
$var wire 1 # RCLK $end
$var wire 1 U" RCLKE $end
$var wire 1 V" RE $end
$var wire 11 a" WADDR [10:0] $end
$var wire 1 X" WCLK $end
$var wire 1 Y" WCLKE $end
$var wire 16 b" WDATA [15:0] $end
$var wire 1 [" WE $end
$var wire 16 c" WMASK_I [15:0] $end
$var wire 16 d" WDATA_I [15:0] $end
$var wire 16 e" RMASK_I [15:0] $end
$var wire 16 f" RDATA [15:0] $end
$var reg 16 g" RDATA_I [15:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx g"
b0x000x000x000x0 f"
bx e"
bz d"
b1110111011101110 c"
bz b"
b0 a"
b0xxxxxxxxxx `"
bz _"
bx ^"
b0z000z000z000z0 ]"
bz \"
0["
bz Z"
0Y"
0X"
b0 W"
1V"
1U"
bx T"
bx S"
b0x000x000x000x0 R"
bx Q"
bz P"
b1110111011101110 O"
bz N"
b0 M"
b0xxxxxxxxxx L"
bz K"
bx J"
b0z000z000z000z0 I"
bz H"
0G"
bz F"
0E"
0D"
b0 C"
1B"
1A"
bx @"
bx ?"
b0x000x000x000x0 >"
bx ="
bz <"
b1110111011101110 ;"
bz :"
b0 9"
b0xxxxxxxxxx 8"
bz 7"
bx 6"
b0z000z000z000z0 5"
bz 4"
03"
bz 2"
01"
00"
b0 /"
1."
1-"
bx ,"
bx +"
b0x000x000x000x0 *"
bx )"
bz ("
b1110111011101110 '"
bz &"
b0 %"
b0xxxxxxxxxx $"
bz #"
bx ""
b0z000z000z000z0 !"
bz ~
0}
bz |
0{
0z
b0 y
1x
1w
bx v
bx u
b0x000x000x000x0 t
bx s
bz r
b1110111011101110 q
bz p
b0 o
b0xxxxxxxxxx n
bz m
bx l
b0z000z000z000z0 k
bz j
0i
bz h
0g
0f
b0 e
1d
1c
bx b
bx a
b0x000x000x000x0 `
bx _
bz ^
b1110111011101110 ]
bz \
b0 [
b0xxxxxxxxxx Z
bz Y
bx X
b0z000z000z000z0 W
bz V
0U
bz T
0S
0R
b0 Q
1P
1O
bx N
bx M
b0x000x000x000x0 L
bx K
bz J
b1110111011101110 I
bz H
b0 G
b0xxxxxxxxxx F
bz E
bx D
b0z000z000z000z0 C
bz B
0A
bz @
0?
0>
b0 =
1<
1;
bx :
bx 9
b0x000x000x000x0 8
bx 7
bz 6
b1110111011101110 5
bz 4
b0 3
b0xxxxxxxxxx 2
bz 1
bx 0
b0z000z000z000z0 /
bz .
0-
bz ,
0+
0*
b0 )
1(
1'
bx &
bx %
bx $
0#
bx "
bx !
$end
#1
b1110111011101110 7
b1110111011101110 K
b1110111011101110 _
b1110111011101110 s
b1110111011101110 )"
b1110111011101110 ="
b1110111011101110 Q"
b1110111011101110 e"
b0 2
b0 &
b0 F
b0 :
b0 Z
b0 N
b0 n
b0 b
b0 $"
b0 v
b0 8"
b0 ,"
b0 L"
b0 @"
b0 `"
b0 T"
b0 "
b0 $
1#
#2
0#
#3
b0 ^"
b0 J"
b0 6"
b0 ""
b0 l
b0 X
b1 D
b10011 !
b10011 %
b11 0
b0 f"
b0 R"
b0 >"
b0 *"
b0 t
b0 `
b10 L
b100010 8
b0 g"
b0 S"
b0 ?"
b0 +"
b0 u
b0 a
b1 M
b10001 9
1#
#4
0#
#5
1#
#6
0#
#7
b1 l
b1 X
b11 D
b1000100110111 !
b1000100110111 %
b111 0
b10 t
b10 `
b100010 L
b1000100010 8
b1 u
b1 a
b10001 M
b100010001 9
b1 2
b1 &
b1 F
b1 :
b1 Z
b1 N
b1 n
b1 b
b1 $"
b1 v
b1 8"
b1 ,"
b1 L"
b1 @"
b1 `"
b1 T"
1#
b100 "
b100 $
#8
0#
#9
1#
#10
0#
#11
1#
#12
0#
#13
b11 0
b1 D
b0 l
b1 ""
b1000000000000010000000100010011 !
b1000000000000010000000100010011 %
b100 ^"
b100010 8
b10 L
b0 t
b10 *"
b1000000000 f"
b10001 9
b1 M
b0 u
b1 +"
b100000000 g"
b10 2
b10 &
b10 F
b10 :
b10 Z
b10 N
b10 n
b10 b
b10 $"
b10 v
b10 8"
b10 ,"
b10 L"
b10 @"
b10 `"
b10 T"
1#
b1000 "
b1000 $
#14
0#
#15
1#
#16
0#
#17
1#
#18
0#
#19
b1 ^"
b101 J"
b0 ""
b0 X
b110 D
b10101000000000000000001101111 !
b10101000000000000000001101111 %
b1111 0
b10 f"
b1000000010 R"
b0 *"
b0 `
b1000100000 L
b10001000100010 8
b1 g"
b100000001 S"
b0 +"
b0 a
b100010000 M
b1000100010001 9
b11 2
b11 &
b11 F
b11 :
b11 Z
b11 N
b11 n
b11 b
b11 $"
b11 v
b11 8"
b11 ,"
b11 L"
b11 @"
b11 `"
b11 T"
1#
b1100 "
b1100 $
#20
0#
#21
1#
#22
0#
#23
1#
#24
0#
#25
b11 0
b1 D
b1 X
b1 ""
b1100 J"
b11111100000000010000000100010011 !
b11111100000000010000000100010011 %
b1111 ^"
b100010 8
b10 L
b10 `
b10 *"
b10001000000000 R"
b10001000100010 f"
b10001 9
b1 M
b1 a
b1 +"
b1000100000000 S"
b1000100010001 g"
b100 2
b100 &
b100 F
b100 :
b100 Z
b100 N
b100 n
b100 b
b100 $"
b100 v
b100 8"
b100 ,"
b100 L"
b100 @"
b100 `"
b100 T"
1#
b10000 "
b10000 $
#26
0#
#27
1#
#28
0#
#29
1#
#30
0#
#31
b0 ^"
b10 J"
b1000 6"
b10 l
b1110 X
b10100000010010111000100011 !
b10100000010010111000100011 %
b10 D
b0 f"
b100000 R"
b10000000000000 >"
b100000 t
b10001000100000 `
b100000 L
b0 g"
b10000 S"
b1000000000000 ?"
b10000 u
b1000100010000 a
b10000 M
b101 2
b101 &
b101 F
b101 :
b101 Z
b101 N
b101 n
b101 b
b101 $"
b101 v
b101 8"
b101 ,"
b101 L"
b101 @"
b101 `"
b101 T"
1#
b10100 "
b10100 $
#32
0#
#33
1#
#34
0#
#35
1#
#36
0#
#37
1#
